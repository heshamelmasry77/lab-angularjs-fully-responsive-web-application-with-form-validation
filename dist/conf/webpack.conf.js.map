{"version":3,"sources":["../../conf/webpack.conf.js"],"names":["webpack","require","conf","path","HtmlWebpackPlugin","FailPlugin","autoprefixer","module","exports","loaders","test","exclude","loader","enforce","plugins","optimize","OccurrenceOrderPlugin","NoEmitOnErrorsPlugin","template","src","LoaderOptionsPlugin","options","postcss","debug","ProvidePlugin","$","jQuery","Tether","Popper","devtool","output","join","process","cwd","paths","tmp","filename","entry"],"mappings":";;AAAA,IAAMA,UAAUC,QAAQ,SAAR,CAAhB;AACA,IAAMC,OAAOD,QAAQ,aAAR,CAAb;AACA,IAAME,OAAOF,QAAQ,MAAR,CAAb;;AAEA,IAAMG,oBAAoBH,QAAQ,qBAAR,CAA1B;AACA,IAAMI,aAAaJ,QAAQ,qBAAR,CAAnB;AACA,IAAMK,eAAeL,QAAQ,cAAR,CAArB;;AAEAM,OAAOC,OAAP,GAAiB;AACfD,UAAQ;AACNE,aAAS,CACP;AACEC,YAAM,SADR;AAEED,eAAS,CACP,aADO;AAFX,KADO,EAOP;AACEC,YAAM,OADR;AAEEC,eAAS,cAFX;AAGEC,cAAQ,eAHV;AAIEC,eAAS;AAJX,KAPO,EAaP;AACEH,YAAM,eADR;AAEED,eAAS,CACP,cADO,EAEP,YAFO,EAGP,aAHO,EAIP,gBAJO;AAFX,KAbO,EAsBP;AACEC,YAAM,OADR;AAEEC,eAAS,cAFX;AAGEF,eAAS,CACP,oBADO;AAHX,KAtBO,EA6BP;AACEC,YAAM,SADR;AAEED,eAAS,CACP,aADO;AAFX,KA7BO;AADH,GADO;AAuCfK,WAAS,CACP,IAAId,QAAQe,QAAR,CAAiBC,qBAArB,EADO,EAEP,IAAIhB,QAAQiB,oBAAZ,EAFO,EAGPZ,UAHO,EAIP,IAAID,iBAAJ,CAAsB;AACpBc,cAAUhB,KAAKC,IAAL,CAAUgB,GAAV,CAAc,YAAd;AADU,GAAtB,CAJO,EAOP,IAAInB,QAAQoB,mBAAZ,CAAgC;AAC9BC,aAAS;AACPC,eAAS;AAAA,eAAM,CAAChB,YAAD,CAAN;AAAA;AADF,KADqB;AAI9BiB,WAAO;AAJuB,GAAhC,CAPO,EAaP,IAAIvB,QAAQwB,aAAZ,CAA0B;AACxBC,OAAG,QADqB;AAExBC,YAAQ,QAFgB;AAGxB,qBAAiB,QAHO;AAIxBC,YAAQ,QAJgB;AAKxBC,YAAQ;AALgB,GAA1B,CAbO,CAvCM;AA4DfC,WAAS,YA5DM;AA6DfC,UAAQ;AACN3B,UAAMA,KAAK4B,IAAL,CAAUC,QAAQC,GAAR,EAAV,EAAyB/B,KAAKgC,KAAL,CAAWC,GAApC,CADA;AAENC,cAAU;AAFJ,GA7DO;AAiEfC,gBAAYnC,KAAKC,IAAL,CAAUgB,GAAV,CAAc,OAAd;AAjEG,CAAjB","file":"webpack.conf.js","sourcesContent":["const webpack = require('webpack');\nconst conf = require('./gulp.conf');\nconst path = require('path');\n\nconst HtmlWebpackPlugin = require('html-webpack-plugin');\nconst FailPlugin = require('webpack-fail-plugin');\nconst autoprefixer = require('autoprefixer');\n\nmodule.exports = {\n  module: {\n    loaders: [\n      {\n        test: /\\.json$/,\n        loaders: [\n          'json-loader'\n        ]\n      },\n      {\n        test: /\\.js$/,\n        exclude: /node_modules/,\n        loader: 'eslint-loader',\n        enforce: 'pre'\n      },\n      {\n        test: /\\.(css|scss)$/,\n        loaders: [\n          'style-loader',\n          'css-loader',\n          'sass-loader',\n          'postcss-loader'\n        ]\n      },\n      {\n        test: /\\.js$/,\n        exclude: /node_modules/,\n        loaders: [\n          'ng-annotate-loader'\n        ]\n      },\n      {\n        test: /\\.html$/,\n        loaders: [\n          'html-loader'\n        ]\n      }\n    ]\n  },\n  plugins: [\n    new webpack.optimize.OccurrenceOrderPlugin(),\n    new webpack.NoEmitOnErrorsPlugin(),\n    FailPlugin,\n    new HtmlWebpackPlugin({\n      template: conf.path.src('index.html')\n    }),\n    new webpack.LoaderOptionsPlugin({\n      options: {\n        postcss: () => [autoprefixer]\n      },\n      debug: true\n    }),\n    new webpack.ProvidePlugin({\n      $: 'jquery',\n      jQuery: 'jquery',\n      'window.jQuery': 'jquery',\n      Tether: 'tether',\n      Popper: 'popper.js'\n    })\n  ],\n  devtool: 'source-map',\n  output: {\n    path: path.join(process.cwd(), conf.paths.tmp),\n    filename: 'index.js'\n  },\n  entry: `./${conf.path.src('index')}`\n};\n"]}